{"ast":null,"code":"import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n  var start = performance.now();\n  var _checkElapsed = function checkElapsed(_ref) {\n    var timestamp = _ref.timestamp;\n    var elapsed = timestamp - start;\n    if (elapsed >= timeout) {\n      cancelFrame(_checkElapsed);\n      callback(elapsed - timeout);\n    }\n  };\n  frame.read(_checkElapsed, true);\n  return function () {\n    return cancelFrame(_checkElapsed);\n  };\n}\nexport { delay };","map":{"version":3,"names":["frame","cancelFrame","delay","callback","timeout","start","performance","now","checkElapsed","_ref","timestamp","elapsed","read"],"sources":["C:/Users/manuel/Desktop/nxtlvl-site/node_modules/framer-motion/dist/es/utils/delay.mjs"],"sourcesContent":["import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n"],"mappings":"AAAA,SAASA,KAAK,EAAEC,WAAW,QAAQ,wBAAwB;;AAE3D;AACA;AACA;AACA,SAASC,KAAKA,CAACC,QAAQ,EAAEC,OAAO,EAAE;EAC9B,IAAMC,KAAK,GAAGC,WAAW,CAACC,GAAG,CAAC,CAAC;EAC/B,IAAMC,aAAY,GAAG,SAAfA,YAAYA,CAAAC,IAAA,EAAsB;IAAA,IAAhBC,SAAS,GAAAD,IAAA,CAATC,SAAS;IAC7B,IAAMC,OAAO,GAAGD,SAAS,GAAGL,KAAK;IACjC,IAAIM,OAAO,IAAIP,OAAO,EAAE;MACpBH,WAAW,CAACO,aAAY,CAAC;MACzBL,QAAQ,CAACQ,OAAO,GAAGP,OAAO,CAAC;IAC/B;EACJ,CAAC;EACDJ,KAAK,CAACY,IAAI,CAACJ,aAAY,EAAE,IAAI,CAAC;EAC9B,OAAO;IAAA,OAAMP,WAAW,CAACO,aAAY,CAAC;EAAA;AAC1C;AAEA,SAASN,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module"}