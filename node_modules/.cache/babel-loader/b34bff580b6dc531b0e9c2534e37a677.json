{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\manuel\\\\Desktop\\\\nxtlvl-site\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"C:\\\\Users\\\\manuel\\\\Desktop\\\\nxtlvl-site\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\manuel\\\\Desktop\\\\nxtlvl-site\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nvar PanSession = /*#__PURE__*/function () {\n  function PanSession(event, handlers) {\n    var _this = this;\n    var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      transformPagePoint = _ref.transformPagePoint,\n      contextWindow = _ref.contextWindow,\n      _ref$dragSnapToOrigin = _ref.dragSnapToOrigin,\n      dragSnapToOrigin = _ref$dragSnapToOrigin === void 0 ? false : _ref$dragSnapToOrigin;\n    _classCallCheck(this, PanSession);\n    /**\n     * @internal\n     */\n    this.startEvent = null;\n    /**\n     * @internal\n     */\n    this.lastMoveEvent = null;\n    /**\n     * @internal\n     */\n    this.lastMoveEventInfo = null;\n    /**\n     * @internal\n     */\n    this.handlers = {};\n    /**\n     * @internal\n     */\n    this.contextWindow = window;\n    this.updatePoint = function () {\n      if (!(_this.lastMoveEvent && _this.lastMoveEventInfo)) return;\n      var info = getPanInfo(_this.lastMoveEventInfo, _this.history);\n      var isPanStarted = _this.startEvent !== null;\n      // Only start panning if the offset is larger than 3 pixels. If we make it\n      // any larger than this we'll want to reset the pointer history\n      // on the first update to avoid visual snapping to the cursoe.\n      var isDistancePastThreshold = distance2D(info.offset, {\n        x: 0,\n        y: 0\n      }) >= 3;\n      if (!isPanStarted && !isDistancePastThreshold) return;\n      var point = info.point;\n      var timestamp = frameData.timestamp;\n      _this.history.push(_objectSpread(_objectSpread({}, point), {}, {\n        timestamp: timestamp\n      }));\n      var _this$handlers = _this.handlers,\n        onStart = _this$handlers.onStart,\n        onMove = _this$handlers.onMove;\n      if (!isPanStarted) {\n        onStart && onStart(_this.lastMoveEvent, info);\n        _this.startEvent = _this.lastMoveEvent;\n      }\n      onMove && onMove(_this.lastMoveEvent, info);\n    };\n    this.handlePointerMove = function (event, info) {\n      _this.lastMoveEvent = event;\n      _this.lastMoveEventInfo = transformPoint(info, _this.transformPagePoint);\n      // Throttle mouse move event to once per frame\n      frame.update(_this.updatePoint, true);\n    };\n    this.handlePointerUp = function (event, info) {\n      _this.end();\n      var _this$handlers2 = _this.handlers,\n        onEnd = _this$handlers2.onEnd,\n        onSessionEnd = _this$handlers2.onSessionEnd,\n        resumeAnimation = _this$handlers2.resumeAnimation;\n      if (_this.dragSnapToOrigin) resumeAnimation && resumeAnimation();\n      if (!(_this.lastMoveEvent && _this.lastMoveEventInfo)) return;\n      var panInfo = getPanInfo(event.type === \"pointercancel\" ? _this.lastMoveEventInfo : transformPoint(info, _this.transformPagePoint), _this.history);\n      if (_this.startEvent && onEnd) {\n        onEnd(event, panInfo);\n      }\n      onSessionEnd && onSessionEnd(event, panInfo);\n    };\n    // If we have more than one touch, don't start detecting this gesture\n    if (!isPrimaryPointer(event)) return;\n    this.dragSnapToOrigin = dragSnapToOrigin;\n    this.handlers = handlers;\n    this.transformPagePoint = transformPagePoint;\n    this.contextWindow = contextWindow || window;\n    var info = extractEventInfo(event);\n    var initialInfo = transformPoint(info, this.transformPagePoint);\n    var point = initialInfo.point;\n    var timestamp = frameData.timestamp;\n    this.history = [_objectSpread(_objectSpread({}, point), {}, {\n      timestamp: timestamp\n    })];\n    var onSessionStart = handlers.onSessionStart;\n    onSessionStart && onSessionStart(event, getPanInfo(initialInfo, this.history));\n    this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n  }\n  return _createClass(PanSession, [{\n    key: \"updateHandlers\",\n    value: function updateHandlers(handlers) {\n      this.handlers = handlers;\n    }\n  }, {\n    key: \"end\",\n    value: function end() {\n      this.removeListeners && this.removeListeners();\n      cancelFrame(this.updatePoint);\n    }\n  }]);\n}();\nfunction transformPoint(info, transformPagePoint) {\n  return transformPagePoint ? {\n    point: transformPagePoint(info.point)\n  } : info;\n}\nfunction subtractPoint(a, b) {\n  return {\n    x: a.x - b.x,\n    y: a.y - b.y\n  };\n}\nfunction getPanInfo(_ref2, history) {\n  var point = _ref2.point;\n  return {\n    point: point,\n    delta: subtractPoint(point, lastDevicePoint(history)),\n    offset: subtractPoint(point, startDevicePoint(history)),\n    velocity: getVelocity(history, 0.1)\n  };\n}\nfunction startDevicePoint(history) {\n  return history[0];\n}\nfunction lastDevicePoint(history) {\n  return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n  if (history.length < 2) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n  var i = history.length - 1;\n  var timestampedPoint = null;\n  var lastPoint = lastDevicePoint(history);\n  while (i >= 0) {\n    timestampedPoint = history[i];\n    if (lastPoint.timestamp - timestampedPoint.timestamp > secondsToMilliseconds(timeDelta)) {\n      break;\n    }\n    i--;\n  }\n  if (!timestampedPoint) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n  var time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n  if (time === 0) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n  var currentVelocity = {\n    x: (lastPoint.x - timestampedPoint.x) / time,\n    y: (lastPoint.y - timestampedPoint.y) / time\n  };\n  if (currentVelocity.x === Infinity) {\n    currentVelocity.x = 0;\n  }\n  if (currentVelocity.y === Infinity) {\n    currentVelocity.y = 0;\n  }\n  return currentVelocity;\n}\nexport { PanSession };","map":{"version":3,"names":["extractEventInfo","secondsToMilliseconds","millisecondsToSeconds","addPointerEvent","pipe","distance2D","isPrimaryPointer","frame","cancelFrame","frameData","PanSession","event","handlers","_this","_ref","arguments","length","undefined","transformPagePoint","contextWindow","_ref$dragSnapToOrigin","dragSnapToOrigin","_classCallCheck","startEvent","lastMoveEvent","lastMoveEventInfo","window","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","offset","x","y","point","timestamp","push","_objectSpread","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","update","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","resumeAnimation","panInfo","type","initialInfo","onSessionStart","removeListeners","_createClass","key","value","updateHandlers","subtractPoint","a","b","_ref2","delta","lastDevicePoint","startDevicePoint","velocity","getVelocity","timeDelta","i","timestampedPoint","lastPoint","time","currentVelocity","Infinity"],"sources":["C:/Users/manuel/Desktop/nxtlvl-site/node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs"],"sourcesContent":["import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}