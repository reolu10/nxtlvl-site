{"ast":null,"code":"import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nvar DocumentProjectionNode = createProjectionNode({\n  attachResizeListener: function attachResizeListener(ref, notify) {\n    return addDomEvent(ref, \"resize\", notify);\n  },\n  measureScroll: function measureScroll() {\n    return {\n      x: document.documentElement.scrollLeft || document.body.scrollLeft,\n      y: document.documentElement.scrollTop || document.body.scrollTop\n    };\n  },\n  checkIsScrollRoot: function checkIsScrollRoot() {\n    return true;\n  }\n});\nexport { DocumentProjectionNode };","map":{"version":3,"names":["createProjectionNode","addDomEvent","DocumentProjectionNode","attachResizeListener","ref","notify","measureScroll","x","document","documentElement","scrollLeft","body","y","scrollTop","checkIsScrollRoot"],"sources":["C:/Users/manuel/Desktop/nxtlvl-site/node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs"],"sourcesContent":["import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n"],"mappings":"AAAA,SAASA,oBAAoB,QAAQ,8BAA8B;AACnE,SAASC,WAAW,QAAQ,gCAAgC;AAE5D,IAAMC,sBAAsB,GAAGF,oBAAoB,CAAC;EAChDG,oBAAoB,EAAE,SAAtBA,oBAAoBA,CAAGC,GAAG,EAAEC,MAAM;IAAA,OAAKJ,WAAW,CAACG,GAAG,EAAE,QAAQ,EAAEC,MAAM,CAAC;EAAA;EACzEC,aAAa,EAAE,SAAfA,aAAaA,CAAA;IAAA,OAAS;MAClBC,CAAC,EAAEC,QAAQ,CAACC,eAAe,CAACC,UAAU,IAAIF,QAAQ,CAACG,IAAI,CAACD,UAAU;MAClEE,CAAC,EAAEJ,QAAQ,CAACC,eAAe,CAACI,SAAS,IAAIL,QAAQ,CAACG,IAAI,CAACE;IAC3D,CAAC;EAAA,CAAC;EACFC,iBAAiB,EAAE,SAAnBA,iBAAiBA,CAAA;IAAA,OAAQ,IAAI;EAAA;AACjC,CAAC,CAAC;AAEF,SAASZ,sBAAsB","ignoreList":[]},"metadata":{},"sourceType":"module"}