{"ast":null,"code":"import _defineProperty from \"C:/Users/manuel/Desktop/nxtlvl-site/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"C:/Users/manuel/Desktop/nxtlvl-site/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { isString, singleColorRegex, floatRegex } from '../utils.mjs';\nvar isColorString = function isColorString(type, testProp) {\n  return function (v) {\n    return Boolean(isString(v) && singleColorRegex.test(v) && v.startsWith(type) || testProp && Object.prototype.hasOwnProperty.call(v, testProp));\n  };\n};\nvar splitColor = function splitColor(aName, bName, cName) {\n  return function (v) {\n    if (!isString(v)) return v;\n    var _v$match = v.match(floatRegex),\n      _v$match2 = _slicedToArray(_v$match, 4),\n      a = _v$match2[0],\n      b = _v$match2[1],\n      c = _v$match2[2],\n      alpha = _v$match2[3];\n    return _defineProperty(_defineProperty(_defineProperty(_defineProperty({}, aName, parseFloat(a)), bName, parseFloat(b)), cName, parseFloat(c)), \"alpha\", alpha !== undefined ? parseFloat(alpha) : 1);\n  };\n};\nexport { isColorString, splitColor };","map":{"version":3,"names":["isString","singleColorRegex","floatRegex","isColorString","type","testProp","v","Boolean","test","startsWith","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","_v$match","match","_v$match2","_slicedToArray","a","b","c","alpha","_defineProperty","parseFloat","undefined"],"sources":["C:/Users/manuel/Desktop/nxtlvl-site/node_modules/style-value-types/dist/es/color/utils.mjs"],"sourcesContent":["import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,gBAAgB,EAAEC,UAAU,QAAQ,cAAc;AAErE,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,IAAI,EAAEC,QAAQ;EAAA,OAAK,UAACC,CAAC,EAAK;IAC7C,OAAOC,OAAO,CAAEP,QAAQ,CAACM,CAAC,CAAC,IAAIL,gBAAgB,CAACO,IAAI,CAACF,CAAC,CAAC,IAAIA,CAAC,CAACG,UAAU,CAACL,IAAI,CAAC,IACxEC,QAAQ,IAAIK,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACP,CAAC,EAAED,QAAQ,CAAE,CAAC;EACxE,CAAC;AAAA;AACD,IAAMS,UAAU,GAAG,SAAbA,UAAUA,CAAIC,KAAK,EAAEC,KAAK,EAAEC,KAAK;EAAA,OAAK,UAACX,CAAC,EAAK;IAC/C,IAAI,CAACN,QAAQ,CAACM,CAAC,CAAC,EACZ,OAAOA,CAAC;IACZ,IAAAY,QAAA,GAAyBZ,CAAC,CAACa,KAAK,CAACjB,UAAU,CAAC;MAAAkB,SAAA,GAAAC,cAAA,CAAAH,QAAA;MAArCI,CAAC,GAAAF,SAAA;MAAEG,CAAC,GAAAH,SAAA;MAAEI,CAAC,GAAAJ,SAAA;MAAEK,KAAK,GAAAL,SAAA;IACrB,OAAAM,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,KACKX,KAAK,EAAGY,UAAU,CAACL,CAAC,CAAC,GACrBN,KAAK,EAAGW,UAAU,CAACJ,CAAC,CAAC,GACrBN,KAAK,EAAGU,UAAU,CAACH,CAAC,CAAC,YACfC,KAAK,KAAKG,SAAS,GAAGD,UAAU,CAACF,KAAK,CAAC,GAAG,CAAC;EAE1D,CAAC;AAAA;AAED,SAAStB,aAAa,EAAEW,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}